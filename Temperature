/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ConversionCalculator;

/**
 *
 * @author xxb00mh0werxx
 */
public class ConversionCalculatorTemperature extends javax.swing.JFrame {

    /**
     * Creates new form ConversionCalculatorTemperature
     */
    public ConversionCalculatorTemperature() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        temperatureTypeFromLabel = new javax.swing.JLabel();
        temperatureTypeToLabel = new javax.swing.JLabel();
        temperatureQuantityLabel = new javax.swing.JLabel();
        temperatureResultLabel = new javax.swing.JLabel();
        temperatureTypeFromSpinner = new javax.swing.JSpinner();
        temperatureTypeToSpinner = new javax.swing.JSpinner();
        temperatureQuantityTextField = new javax.swing.JTextField();
        temperatureResultTextField = new javax.swing.JTextField();
        temperatureClearButton = new javax.swing.JButton();
        temperatureConvertButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        temperatureTypeFromLabel.setText("What would you like to convert from?");

        temperatureTypeToLabel.setText("What would you like to convert to?");

        temperatureQuantityLabel.setText("Enter quantity for coversion:");

        temperatureResultLabel.setText("Result:");

        temperatureTypeFromSpinner.setModel(new javax.swing.SpinnerListModel(new String[] {"Fahrenheit", "Celsius", "Kelvin"}));

        temperatureTypeToSpinner.setModel(new javax.swing.SpinnerListModel(new String[] {"Fahrenheit", "Celsius", "Kelvin"}));

        temperatureClearButton.setText("Clear");
        temperatureClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temperatureClearButtonActionPerformed(evt);
            }
        });

        temperatureConvertButton.setText("Convert");
        temperatureConvertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temperatureConvertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(temperatureConvertButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(temperatureClearButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(temperatureTypeToLabel)
                            .addComponent(temperatureTypeFromLabel))
                        .addComponent(temperatureQuantityLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(temperatureResultLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(temperatureResultTextField)
                    .addComponent(temperatureQuantityTextField)
                    .addComponent(temperatureTypeToSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(temperatureTypeFromSpinner))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureTypeFromLabel)
                    .addComponent(temperatureTypeFromSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureTypeToLabel)
                    .addComponent(temperatureTypeToSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureQuantityLabel)
                    .addComponent(temperatureQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureResultLabel)
                    .addComponent(temperatureResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureClearButton)
                    .addComponent(temperatureConvertButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void temperatureConvertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temperatureConvertButtonActionPerformed
        // TODO add your handling code here:
        String temperatureFromCurrent = (String)(temperatureTypeFromSpinner.getValue());
        
        if (temperatureFromCurrent.equals("Fahrenheit")) {
            
            String temperatureToCurrent = (String)(temperatureTypeToSpinner.getValue());
            
            if (temperatureToCurrent.equals("Celsius")) {
                double temperatureQuantity = (double)(((Double.parseDouble(temperatureQuantityTextField.getText()))
                        - 32) / 1.8);
                temperatureResultTextField.setText(temperatureQuantity + " Celsius");
            }
            
            if (temperatureToCurrent.equals("Kelvin")) {
                double temperatureQuantity = (double)(((Double.parseDouble(temperatureQuantityTextField.getText()))
                        + 459.67) / (5.0/9.0));
                temperatureResultTextField.setText(temperatureQuantity + " Kelvin");
            }
        }
        
        if (temperatureFromCurrent.equals("Celsius")) {
            
            String temperatureToCurrent = (String)(temperatureTypeToSpinner.getValue());
            
            if (temperatureToCurrent.equals("Fahrenheit")) {
                double temperatureQuantity = (double)(((Double.parseDouble(temperatureQuantityTextField.getText()))
                        * 1.8) + 32);
                temperatureResultTextField.setText(temperatureQuantity + " Fahrenheit");
            }
            
            if (temperatureToCurrent.equals("Kelvin")) {
                double temperatureQuantity = (double)((Double.parseDouble(temperatureQuantityTextField.getText()))
                        + 273.15);
                temperatureResultTextField.setText(temperatureQuantity + " Kelvin");
            }
        }
        
        if (temperatureFromCurrent.equals("Kelvin")) {
            
            String temperatureToCurrent = (String)(temperatureTypeToSpinner.getValue());
            
            if (temperatureToCurrent.equals("Fahrenheit")) {
                double temperatureQuantity = (double)(((Double.parseDouble(temperatureQuantityTextField.getText()))
                        * 1.8) - 459.67);
                temperatureResultTextField.setText(temperatureQuantity + " Fahrenheit");
            }
            
            if (temperatureToCurrent.equals("Celsius")) {
                double temperatureQuantity = (double)((Double.parseDouble(temperatureQuantityTextField.getText()))
                        - 273.15);
                temperatureResultTextField.setText(temperatureQuantity + " Celsius");
            }
        }
    }//GEN-LAST:event_temperatureConvertButtonActionPerformed

    private void temperatureClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temperatureClearButtonActionPerformed
        // TODO add your handling code here:
        temperatureQuantityTextField.setText("");
        temperatureResultTextField.setText("");
    }//GEN-LAST:event_temperatureClearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversionCalculatorTemperature.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversionCalculatorTemperature.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversionCalculatorTemperature.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversionCalculatorTemperature.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversionCalculatorTemperature().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton temperatureClearButton;
    private javax.swing.JButton temperatureConvertButton;
    private javax.swing.JLabel temperatureQuantityLabel;
    private javax.swing.JTextField temperatureQuantityTextField;
    private javax.swing.JLabel temperatureResultLabel;
    private javax.swing.JTextField temperatureResultTextField;
    private javax.swing.JLabel temperatureTypeFromLabel;
    private javax.swing.JSpinner temperatureTypeFromSpinner;
    private javax.swing.JLabel temperatureTypeToLabel;
    private javax.swing.JSpinner temperatureTypeToSpinner;
    // End of variables declaration//GEN-END:variables
}
